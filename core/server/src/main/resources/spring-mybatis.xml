<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- load jdbc properties -->
	<context:property-placeholder
		ignore-resource-not-found="true" location="classpath:jdbc.properties"
		ignore-unresolvable="true" />
	
	<!-- DB JDBC Data Source -->
	<bean id="dataSource_db" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="dataSource_db" />
		<property name="xaDataSourceClassName" value="${db.dataSourceClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="user">${db.username}</prop>
				<prop key="password">${db.password}</prop>
				<prop key="url">${db.url}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="60" />
	</bean>
	
	<bean id="sqlSessionFactory_db" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath*:mapping/db/**/*Mapper.xml" />
		<property name="dataSource" ref="dataSource_db" />
		<property name="typeAliasesPackage" value="cn.hamgol.entity.db.*" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.hamgol.dao.db.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_db"></property>
	</bean>
	
	<!-- Core JDBC Data Source -->
	<bean id="dataSource_core" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="dataSource_core" />
		<property name="xaDataSourceClassName" value="${core.dataSourceClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="user">${core.username}</prop>
				<prop key="password">${core.password}</prop>
				<prop key="url">${core.url}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="60" />
	</bean>
	
	<bean id="sqlSessionFactory_core" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_core" />
		<property name="mapperLocations" value="classpath*:mapping/core/**/*Mapper.xml" />
		<property name="typeAliasesPackage" value="cn.hamgol.entity.core.*" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.hamgol.dao.core.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_core"></property>
	</bean>

	<!-- 定义事务 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	
	<tx:annotation-driven transaction-manager="springTransactionManager" proxy-target-class="true" />
</beans>